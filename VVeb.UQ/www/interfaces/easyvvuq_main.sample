import os
import easyvvuq as uq
import chaospy as cp
from easyvvuq.encoders import BaseEncoder
import sys

# This line is overwritten with input data by easyvvuq_main.sample
# This sets the run_script, parameters, variations and n_smaples variables

#REPLACE_INPUTS_HERE

# --- The usual (simple) easyVVUQ set-up

# --- Setup some variables describing app to be run
cwd            = os.getcwd()
input_filename = "easyvvuq_in.json"
out_file       = "easyvvuq_out.csv"
template       = f"{cwd}/easyvvuq_input.template"
cmd            = f"{cwd}/{run_script} {input_filename}"

# --- Create campaign
my_campaign = uq.Campaign(name='easyvvuq_campaign', work_dir=".")

# --- Encoder for the input file
encoder = uq.encoders.GenericEncoder(template_fname=template,target_filename=input_filename)

# --- Define a decoder
decoder = uq.decoders.SimpleCSV(target_filename=out_file,output_columns=['Step','Value'])

# --- Define campaign
my_campaign.add_app(name="run_script_easyvvuq", params=parameters, encoder=encoder, decoder=decoder)

# --- Specify Sampler
my_sampler = #SAMPLER#

my_campaign.set_sampler(my_sampler)

# --- How many samples?
my_campaign.draw_samples(#DRAWARGS#)

# --- Create run input directories
my_campaign.populate_runs_dir()

print(my_campaign)

# --- Run Application with internal script
my_campaign.apply_for_each_run_dir(uq.actions.ExecuteLocal(cmd, interpret='python3'))
